<%- include('../admin-partials/header'); %>
<div class="container tm-mt-big tm-mb-big">
  <div class="row">
    <div class="col-lg col-md-12 col-sm-12 mx-auto">
      <form id="sizeForm">
        <div class="tm-bg-primary-dark tm-block tm-block-h-auto">
          <div class="row tm-edit-product-row" style="display: flex; justify-content: center;">
            <div class="col-lg-6 col-md-6 col-sm-12">
              <div class="form-group mb-3">
                <label for="name" style="color: white">Size</label>
                <input
                  id="name"
                  name="size"
                  type="text"
                  class="form-control"
                  value="<%=size.size%>"
                  style="background-color: white; color: black"
                />
                <span
                  id="error-message-category-name"
                  class="text-danger"
                ></span>
              </div>
            </div>
          </div>
          <hr />
          <div class="row tm-edit-product-row">
            <div class="col-12" style="display: flex; justify-content: center">
              <button type="submit" class="btn btn-primary text-uppercase">
                Add Size Now
              </button>
            </div>
          </div>
        </div>
      </form>
    </div>
  </div>
</div>
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<script>
  function isOnlySpaces(str) {
    return str.trim().length === 0;
  }

  function isValidSize(size) {
    const num = Number(size);
    return Number.isInteger(num) && num > 1 && !size.includes(" ");
  }

  // Function to validate individual fields
  function validateField(fieldId, errorMessageId, validationFn, errorMessage) {
    const field = document.getElementById(fieldId);
    const errorMessageElement = document.getElementById(errorMessageId);
    if (validationFn(field.value)) {
      errorMessageElement.innerHTML = errorMessage;
      return false;
    } else {
      errorMessageElement.innerHTML = "";
      return true;
    }
  }

  function validateForm() {
    let isValid = true;

    isValid &= validateField(
      "name",
      "error-message-category-name",
      isOnlySpaces,
      "*Please enter a valid size*"
    );

    isValid &= validateField(
      "name",
      "error-message-category-name",
      (value) => !isValidSize(value),
      "*Size must be a positive integer greater than 1 without spaces*"
    );

    if (!isValid) return false;
   
    return isValid;
  }

  const fieldsToValidate = [
    {
      fieldId: "name",
      errorMessageId: "error-message-category-name",
      validationFn: isOnlySpaces,
      errorMessage: "*Please enter a valid size*",
    },
    {
      fieldId: "name",
      errorMessageId: "error-message-category-name",
      validationFn: (value) => !isValidSize(value),
      errorMessage: "*Size must be a positive integer greater than 1 without spaces*",
    },
  ];

  fieldsToValidate.forEach(
    ({ fieldId, errorMessageId, validationFn, errorMessage }) => {
      document.getElementById(fieldId).addEventListener("input", function () {
        validateField(fieldId, errorMessageId, validationFn, errorMessage);
      });
    }
  );

  //send data to server
  const addSizeForm = document.querySelector("#sizeForm");
  addSizeForm.addEventListener("submit", async (event) => {
    event.preventDefault();
    if (validateForm()) {
      const formData = new FormData(addSizeForm);
      const size = formData.get("size");

      try {
        const response = await fetch("/admin/add-size", {
          method: "POST",
          headers: {
            "Content-Type": "application/json",
          },
          body: JSON.stringify({
            size,
          }),
        });
        const data = await response.json();
        if (response.ok) {
          Swal.fire({
            title: `size "${data.size}" successfully Added `,
            icon: "success",
            showCancelButton: false,
            confirmButtonColor: "#3085d6",
            confirmButtonText: "OK",
          }).then(async (result) => {
            if (result.isConfirmed) {
              window.location.href = "/admin/color-and-size";
            }
          });
        } else {
          Swal.fire({
            title: data.message,
            icon: "error",
            showCancelButton: false,
            confirmButtonColor: "#3085d6",
            confirmButtonText: "OK",
          });
        }
      } catch (error) {
        Swal.fire({
          title: "An error occurred",
          icon: "error",
          showCancelButton: false,
          confirmButtonColor: "#3085d6",
          confirmButtonText: "OK",
        });
      }
    }
  });
</script>

<%- include('../admin-partials/footer'); %>

