<%- include('../admin-partials/header'); %>
<div class="container tm-mt-big tm-mb-big">
  <div class="row">
    <div class="col-lg col-md-12 col-sm-12 mx-auto">
      <form id="categoryForm">
        <div class="tm-bg-primary-dark tm-block tm-block-h-auto">
          <div class="row tm-edit-product-row">
            <div class="col-lg-6 col-md-6 col-sm-12">
              <div class="form-group mb-3">
                <label for="name" style="color: white">Name</label>
                <input
                  id="name"
                  name="name"
                  type="text"
                  class="form-control"
                  style="background-color: white; color: black"
                />
                <span
                  id="error-message-category-name"
                  class="text-danger"
                ></span>
              </div>
            </div>
            <div class="col-lg-6 col-md-6 col-sm-12">
              <div class="form-group mb-3">
                <label for="discription" style="color: white"
                  >Discription</label
                >
                <textarea
                  class="form-control validate"
                  rows="1"
                  id="description"
                  name="discription"
                  style="background-color: white; color: black"
                ></textarea>
                <span id="error-message-description" class="text-danger"></span>
              </div>
            </div>
          </div>
          <hr />
          <div class="row tm-edit-product-row">
            <div class="col-12" style="display: flex; justify-content: center">
              <button type="submit" class="btn btn-primary text-uppercase">
                Add Category Now
              </button>
            </div>
          </div>
        </div>
      </form>
    </div>
  </div>
</div>
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<script>
  // Utility functions
  function isOnlySpaces(str) {
    return str.trim().length === 0;
  }
  
  function isValidTagName(tagName) {
    const regex = /^[a-zA-Z]{3,10}$/;
    return regex.test(tagName);
  }
  
  // Field validation function
  function validateField(fieldId, errorMessageId, validationFn, errorMessage) {
    const field = document.getElementById(fieldId);
    const errorMessageElement = document.getElementById(errorMessageId);
    if (!validationFn(field.value)) {
      errorMessageElement.innerHTML = errorMessage;
      return false;
    } else {
      errorMessageElement.innerHTML = "";
      return true;
    }
  }
  
  // Form validation function
  function validateForm() {
    const nameValid = validateField(
      "name",
      "error-message-category-name",
      value => !isOnlySpaces(value),
      "*Please enter a valid tag*"
    );
  
    const nameFormatValid = validateField(
      "name",
      "error-message-category-name",
      isValidTagName,
      "*Tag must be only characters, no spaces, and between 3 and 10 characters long*"
    );
  
    const descriptionValid = validateField(
      "description",
      "error-message-description",
      value => !isOnlySpaces(value),
      "*Description must be filled*"
    );
  
    return nameValid && nameFormatValid && descriptionValid;
  }
  
  // Form submission event listener
  document.addEventListener('DOMContentLoaded', () => {
    const addCategoryForm = document.querySelector("#categoryForm");
    addCategoryForm.addEventListener("submit", async (event) => {
      event.preventDefault();
      console.log("Form submitted");  // Debug log
      if (validateForm()) {
        console.log("Form validation passed");  // Debug log
        const formData = new FormData(addCategoryForm);
        const name = formData.get("name");
        const discription = formData.get("discription");
  
        try {
          const response = await fetch("/admin/add-category", {
            method: "POST",
            headers: {
              "Content-Type": "application/json",
            },
            body: JSON.stringify({
              name,
              discription,
            }),
          });
          const data = await response.json();
          if (response.ok) {
            Swal.fire({
              title: `category "${data.name}" successfully Added `,
              icon: "success",
              showCancelButton: false,
              confirmButtonColor: "#3085d6",
              confirmButtonText: "OK",
            }).then((result) => {
              if (result.isConfirmed) {
                window.location.href = "/admin/add-category-page";
              }
            });
          } else {
            Swal.fire({
              title: data.message,
              icon: "error",
              showCancelButton: false,
              confirmButtonColor: "#3085d6",
              confirmButtonText: "OK",
            });
          }
        } catch (error) {
          console.error("Error submitting form:", error);  // Debug log
          Swal.fire({
            title: "An error occurred",
            icon: "error",
            showCancelButton: false,
            confirmButtonColor: "#3085d6",
            confirmButtonText: "OK",
          });
        }
      } else {
        console.log("Form validation failed");  // Debug log
      }
    });
  });
  </script>

<%- include('../admin-partials/footer'); %>
