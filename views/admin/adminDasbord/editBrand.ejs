<%- include('../admin-partials/header'); %>
<div class="container tm-mt-big tm-mb-big">
  <div class="row">
    <div class="col-lg col-md-12 col-sm-12 mx-auto">
      <form id="brandForm">
        <div class="tm-bg-primary-dark tm-block tm-block-h-auto">
          <div class="row tm-edit-product-row">
            <div class="col-lg-6 col-md-6 col-sm-12">
              <div class="form-group mb-3">
                <label for="name" style="color: white">Name</label>
                <input
                  id="name"
                  name="name"
                  type="text"
                  value="<%= brand.name %>"
                  class="form-control"
                  data_id = "<%= brand._id %>"
                  style="background-color: white; color: black"
                />
                <span
                  id="error-message-brand-name"
                  class="text-danger"
                ></span>
              </div>
            </div>
            <div class="col-lg-6 col-md-6 col-sm-12">
              <div class="form-group mb-3">
                <label for="discription" style="color: white"
                  >Discription</label
                >
                <textarea
                  class="form-control validate"
                  rows="1"
                  id="description"
                  name="discription"
                  style="background-color: white; color: black"
                ><%=brand.discription%></textarea>
                <span id="error-message-description" class="text-danger"></span>
              </div>
            </div>
          </div>
          <hr />
          <div class="row tm-edit-product-row">
            <div class="col-12" style="display: flex; justify-content: center">
              <button type="submit" class="btn btn-primary text-uppercase">
                Edit Brand Now
              </button>
            </div>
          </div>
        </div>
      </form>
    </div>
  </div>
</div>
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<script>
   function isOnlySpaces(str) {
    return str.trim().length === 0;
  }

  function isValidBrandName(brandName) {
    const regex = /^[a-zA-Z]{3,}$/;
    return regex.test(brandName);
  }

  // Function to validate individual fields
  function validateField(fieldId, errorMessageId, validationFn, errorMessage) {
    const field = document.getElementById(fieldId);
    const errorMessageElement = document.getElementById(errorMessageId);
    if (!validationFn(field.value)) {
      errorMessageElement.innerHTML = errorMessage;
      return false;
    } else {
      errorMessageElement.innerHTML = "";
      return true;
    }
  }

  function validateForm() {
    const nameValid = validateField(
      "name",
      "error-message-brand-name",
      value => !isOnlySpaces(value),
      "*Please enter a valid brand name*"
    );

    const nameFormatValid = validateField(
      "name",
      "error-message-brand-name",
      isValidBrandName,
      "*Brand name must be only characters, no spaces, and at least 3 characters long*"
    );

    const descriptionValid = validateField(
      "description",
      "error-message-description",
      value => !isOnlySpaces(value),
      "*Description must be filled*"
    );

    return nameValid && nameFormatValid && descriptionValid;
  }

  const fieldsToValidate = [
    {
      fieldId: "name",
      errorMessageId: "error-message-brand-name",
      validationFn: value => !isOnlySpaces(value) && isValidBrandName(value),
      errorMessage: "*Brand name must be only characters, no spaces, and at least 3 characters long*",
    },
    {
      fieldId: "description",
      errorMessageId: "error-message-description",
      validationFn: value => !isOnlySpaces(value),
      errorMessage: "*Description must be filled*",
    },
  ];

  fieldsToValidate.forEach(
    ({ fieldId, errorMessageId, validationFn, errorMessage }) => {
      document.getElementById(fieldId).addEventListener("input", function () {
        validateField(fieldId, errorMessageId, validationFn, errorMessage);
      });
    }
  );

  //send data to server
  const addCategoryForm = document.querySelector("#brandForm");
  addCategoryForm.addEventListener("submit", async (event) => {
    event.preventDefault();
    if (validateForm()) {
      const formData = new FormData(addCategoryForm);
      const name = formData.get("name");
      const discription = formData.get("discription");
      const inputField = document.querySelector("#name");
      const id = inputField.getAttribute("data_id");

      try {
        const response = await fetch(`/admin/edit-brand/${id}`, {
          method: "PATCH",
          headers: {
            "Content-Type": "application/json",
          },
          body: JSON.stringify({
            name,
            discription,
          }),
        });
        const data = await response.json();
        if (response.ok) {
          Swal.fire({
            title: `Brand "${data.brand.name}" successfully edited`,
            icon: "success",
            showCancelButton: false,
            confirmButtonColor: "#3085d6",
            confirmButtonText: "OK",
          }).then(async (result) => {
            if (result.isConfirmed) {
              window.location.href = "/admin/categories-and-brand";
            }
          });
        } else {
          Swal.fire({
            title: data.message,
            icon: "error",
            showCancelButton: false,
            confirmButtonColor: "#3085d6",
            confirmButtonText: "OK",
          });
        }
      } catch (error) {
        console.log(error);
        Swal.fire({
          title: "An error occurred",
          icon: "error",
          showCancelButton: false,
          confirmButtonColor: "#3085d6",
          confirmButtonText: "OK",
        });
      }
    }
  });
</script>

<%- include('../admin-partials/footer'); %>
