<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <meta http-equiv="X-UA-Compatible" content="ie=edge" />
    <title>Karma Dashboard</title>
    <link rel="shortcut icon" href="/img/fav.png" />
    <link rel="stylesheet" href="https://fonts.googleapis.com/css?family=Roboto:400,700" />
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.3/css/all.min.css" />
    <link rel="stylesheet" href="/adminpublic/css/bootstrap.min.css" />
    <link rel="stylesheet" href="/adminpublic/css/templatemo-style.css" />
    <link rel="stylesheet" href="https://cdn.datatables.net/1.11.5/css/dataTables.bootstrap4.min.css" />
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/toastr.min.css" />
    <style>
        .offer-section {
            background-color: #435c70;
            padding: 20px;
            margin-bottom: 20px;
            border-radius: 10px;
        }
        .offer-section h2 {
            color: #fff;
            margin-bottom: 20px;
        }
        .offer-form {
            background-color: #4e657a;
            padding: 20px;
            border-radius: 5px;
        }
        .offer-form label {
            color: #fff;
        }
        .offer-form input, .offer-form select {
            margin-bottom: 10px;
        }
        .offer-list {
            background-color: #4e657a;
            padding: 20px;
            border-radius: 5px;
            margin-top: 20px;
        }
        .offer-list table {
            color: #fff;
        }
        .btn-add-offer {
            margin-bottom: 20px;
        }
        .product-image {
            max-width: 100px;
            height: auto;
        }
        .action-buttons .btn {
            margin-bottom: 5px;
        }
        .modal-content {
            background-color: #435c70;
            color: #fff;
        }
        .modal-header {
            border-bottom: 1px solid #4e657a;
        }
        .modal-footer {
            border-top: 1px solid #4e657a;
        }
        .form-control {
            background-color: #4e657a;
            color: #fff;
            border: 1px solid #6c7fa1;
        }
        .form-control:focus {
            background-color: #4e657a;
            color: #fff;
        }
    </style>
</head>
<body>
    <%- include('../admin-partials/header'); %>

    <div class="container mt-5" style="padding-bottom: 50px">
        <h2 class="tm-block-title">Category Offer List</h2>
        <div class="row mb-4">
            <button class="btn btn-primary btn-add-offer" data-toggle="modal" data-target="#categoryOfferModal">
                <i class="fas fa-plus"></i> Add Category Offer
            </button>
        </div>
        <div class="table-responsive">
            <table id="productsTable" class="table table-hover">
                <thead class="thead-dark">
                    <tr>
                        <th>NO</th>
                        <th>CATEGORY NAME</th>
                        <th>EXPIRY</th>
                        <th>OFFER</th>
                        <th>EXPIRY DATE</th>
                        <th>ACTION</th>
                    </tr>
                </thead>
                <tbody>
                    <% if (offerCategorysWithExpiryStatus && offerCategorysWithExpiryStatus.length > 0) { %>
                        <% offerCategorysWithExpiryStatus.forEach((category, idx) => { %>
                            <tr>
                                <th><%= idx + 1 %></th>
                                <td><%= category.category_id.name %></td>
                                <td>
                                    <% if (category.isExpired) { %>
                                        <div class="tm-status-circle cancelled"></div>
                                    <% } else { %>
                                        <div class="tm-status-circle moving"></div>
                                    <% } %>
                                </td>
                                <td><%= category.offerPercentage %>%</td>
                                <td><%= new Date(category.expiryDate).toDateString() %></td>
                                <td>
                                    <a class="btn btn-danger btn-sm deleteAction" onclick="deleteCategoryOffer('<%= category._id %>')">
                                        <i class="far fa-trash-alt"></i>
                                    </a>
                                    <a href="#" data-toggle="modal" data-target="#categoryEditOfferModal" class="btn btn-primary btn-sm editAction" data-index="<%= idx %>">
                                        <i class="fas fa-edit"></i>
                                    </a>
                                </td>
                            </tr>
                        <% }) %>
                    <% } else { %>
                        <tr>
                            <td colspan="6" class="text-center">No products in the database</td>
                        </tr>
                    <% } %>
                </tbody>
            </table>
        </div>
    </div>

    <!--category offer add Modal -->
    <div class="modal fade" id="categoryOfferModal" tabindex="-1" role="dialog" aria-labelledby="categoryOfferModalLabel" aria-hidden="true">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title text-dark" id="categoryOfferModalLabel">Add Category Offer</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <form id="categoryOfferForm" class="offer-form">
                        <div class="form-group">
                            <label for="categoryDiscount">Discount in percentage</label>
                            <input type="number" class="form-control" id="categoryDiscount" name="offerPercentage" placeholder="Discount in percentage" required />
                            <label for="selectCategory">Select Category</label>
                            <select class="form-control" name="category_id" required>
                                <% categorys.forEach((category) => { %>
                                    <option value="<%= category._id %>"><%= category.name %></option>
                                <% }) %>
                            </select>
                            <label for="expiryDate">Expiry Date</label>
                            <input type="date" class="form-control" name="expiryDate" required>
                        </div>
                        <div>
                            <button type="submit" class="btn btn-primary">Add Discount</button>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>

    <!-- offer edit model  -->
    <div class="modal fade" id="categoryEditOfferModal" tabindex="-1" role="dialog" aria-labelledby="categoryEditOfferModalLabel" aria-hidden="true">
      <div class="modal-dialog" role="document">
          <div class="modal-content">
              <div class="modal-header">
                  <h5 class="modal-title text-dark" id="categoryEditOfferModalLabel">Update Category Offer</h5>
                  <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                      <span aria-hidden="true">&times;</span>
                  </button>
              </div>
              <div class="modal-body">
                  <form id="categoryEditOfferForm" class="offer-form">
                      <div class="form-group">
                          <label for="editCategoryDiscount">Discount in percentage</label>
                          <input type="number" class="form-control" id="editCategoryDiscount" name="offerPercentage" placeholder="Discount in percentage" required />
                          <label for="editSelectCategory">Select Category</label>
                          <select class="form-control" id="editSelectCategory" name="category_id" required>
                              <% categorys.forEach((category) => { %>
                                  <option value="<%= category._id %>"><%= category.name %></option>
                              <% }) %>
                          </select>
                          <label for="editExpiryDate">Expiry Date</label>
                          <input type="date" class="form-control" id="editExpiryDate" name="expiryDate" required>
                      </div>
                      <div>
                          <button type="submit" class="btn btn-primary">Update Discount</button>
                      </div>
                  </form>
              </div>
          </div>
      </div>
    </div>

    <%- include('../admin-partials/footer'); %>

    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
    <script src="/adminpublic/js/bootstrap.min.js"></script>
    <script src="https://cdn.datatables.net/1.11.5/js/jquery.dataTables.min.js"></script>
    <script src="https://cdn.datatables.net/1.11.5/js/dataTables.bootstrap4.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/toastr.min.js"></script>
    <script>
        $(document).ready(function() {
            $('#productsTable').DataTable({
                "pageLength": 10,
                "lengthMenu": [[10, 25, 50, -1], [10, 25, 50, "All"]],
                "order": [[0, "asc"]],
                "language": {
                    "search": "Search products:"
                }
            });
        });

        const showSuccessToast = (message) => {
            toastr.options = {
                "positionClass": "toast-top-center",
                "timeOut": "3000",
                "closeButton": true,
            };
            toastr.success(message);
        };

        const showErrorToast = (message) => {
            toastr.options = {
                "positionClass": "toast-top-center",
                "timeOut": "3000",
                "closeButton": true,
            };
            toastr.error(message);
        };


        const categoryOfferForm = document.getElementById("categoryOfferForm");

categoryOfferForm.addEventListener('submit', async (event) => {
    event.preventDefault();

    const offerPercentage =  categoryOfferForm.offerPercentage.value;

if(parseInt(offerPercentage) > 90){
showErrorToast("Discount cannot be more than 90%");
categoryOfferForm.offerPercentage.value = offerPercentage;
return;
   }
   if(parseInt(offerPercentage) <= 0){
showErrorToast("Discount amount must be greater than 0");
return;
   }


    const response = await fetch("/admin/add-new-category-offer", {
        method: 'POST',
        headers: {
            'Content-Type': 'application/json',
        },
        body: JSON.stringify({
            offerPercentage: categoryOfferForm.offerPercentage.value,
            category_id: categoryOfferForm.category_id.value,
            expiryDate: categoryOfferForm.expiryDate.value,
        }),
    });

    if (response.ok) {
        Swal.fire({
            icon: "success",
            title: "Category offer added successfully",
            showConfirmButton: false,
            timer: 1500,
        }).then(() => {
            window.location.reload();
        });
    } else {
        const errorData = await response.json();
        showErrorToast(`Oops... ${errorData.error}`);
    }
});

        function deleteCategoryOffer(category_id) {
            Swal.fire({
                title: 'Do you want to delete this product?',
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                confirmButtonText: 'OK',
            }).then(async (result) => {
                if (result.isConfirmed) {
                    const response = await fetch(`/admin/delete-category-offer/${category_id}`, {
                        method: 'DELETE',
                        headers: {
                            'Content-Type': 'application/json',
                        },
                    });

                    if (response.ok) {
                        Swal.fire({
                            icon: 'success',
                            title: 'category deleted successfully',
                            showConfirmButton: false,
                            timer: 1500,
                        }).then(() => {
                            window.location.reload();
                        });
                    } else {
                      showErrorToast("oops somthing went wrong");
                    }
                }
            });
        }
     
        // edit category modal 
        const offerCategorysWithExpiryStatus = JSON.parse('<%= JSON.stringify(offerCategorysWithExpiryStatus) %>'.replace(/&#34;/g, '"'));
        console.log(offerCategorysWithExpiryStatus);
          let category;
        document.querySelectorAll('.editAction').forEach(button => {
            button.addEventListener('click', (event) => {
              console.log("clidk");
                const index = event.currentTarget.getAttribute('data-index');
                category = offerCategorysWithExpiryStatus[index];

                document.getElementById('editCategoryDiscount').value = category.offerPercentage;
                document.getElementById('editSelectCategory').value = category.category_id._id;
                document.getElementById('editExpiryDate').value = new Date(category.expiryDate).toISOString().split('T')[0];
            });
        });

        //edit category offer
        const categoryEditOfferForm = document.getElementById("categoryEditOfferForm");
        categoryEditOfferForm.addEventListener('submit', async (event) => {
            event.preventDefault();

            const offerPercentage =  categoryEditOfferForm.offerPercentage.value;

            if(parseInt(offerPercentage) > 90){
            showErrorToast("Discount cannot be more than 90%");
            categoryEditOfferForm.offerPercentage.value = offerPercentage;
            return;
               }
               if(parseInt(offerPercentage) <= 0){
            showErrorToast("Discount amount must be greater than 0");
            return;
               }

            const response = await fetch("/admin/update-category-offer", {
                method: 'PUT',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({
                    offerPercentage: categoryEditOfferForm.offerPercentage.value,
                    category_id: categoryEditOfferForm.category_id.value,
                    expiryDate: categoryEditOfferForm.expiryDate.value,
                    id : category._id
                }),
            });

            if (response.ok) {
                Swal.fire({
                    icon: "success",
                    title: "Category offer updated successfully",
                    showConfirmButton: false,
                    timer: 1500,
                }).then(() => {
                    window.location.reload();
                });
            } else {
                const errorData = await response.json();
                console.log(errorData);
                showErrorToast(`Oops...${errorData.error}`);
            }
        });
    </script>
</body>
</html>
