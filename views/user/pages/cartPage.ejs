<%- include('../userPartials/header'); %>
<style>
  body {
      font-family: Arial, sans-serif;
  }
  .modal {
      display: none;
      position: fixed;
      z-index: 1;
      left: 0;
      top: 0;
      width: 100%;
      height: 100%;
      overflow: auto;
      background-color: rgba(0,0,0,0.4);
  }
  .modal-content {
      background-color: #fefefe;
      margin: 5% auto;
      padding: 20px;
      border: 1px solid #888;
      width: 90%;
      max-width: 500px;
  }
  .closeInfo{
    color: #aaa;
      float: right;
      font-size: 28px;
      font-weight: bold;
      cursor: pointer;
  }
  .close {
      color: #aaa;
      float: right;
      font-size: 28px;
      font-weight: bold;
      cursor: pointer;
  }
  .coupon-search {
      width: 100%;
      padding: 10px;
      margin-bottom: 10px;
      border: 1px solid #ddd;
      border-radius: 4px;
  }
  .coupon-list {
      max-height: 300px;
      overflow-y: auto;
      border: 1px solid #ddd;
      padding: 10px;
      margin-bottom: 10px;
  }
  .coupon-item {
      margin-bottom: 10px;
      padding: 10px;
      border: 1px dashed #ddd;
      display: flex;
      align-items: center;
  }
  .coupon-code {
      font-weight: bold;
      color: #ff3e6c;
      border: 1px dashed #ff3e6c;
      padding: 5px;
      margin-right: 10px;
  }
  .apply-btn {
      background-color: #ff3e6c;
      color: white;
      border: none;
      padding: 10px 20px;
      cursor: pointer;
      width: 100%;
      font-size: 16px;
  }
  .savings {
      font-weight: bold;
      margin-bottom: 5px;
  }
</style>

<div class="breadcrumb-wrap">
  <div class="container-fluid">
    <ul class="breadcrumb">
      <li class="breadcrumb-item"><a href="#">Home</a></li>
      <li class="breadcrumb-item"><a href="#">Products</a></li>
      <li class="breadcrumb-item active">Cart</li>
    </ul>
  </div>
</div>

<!-- Cart Start -->
<div class="cart-page">
  <div class="container-fluid">
    <% if(cartProducts){%>
    <div class="row">
      <div class="col-lg-8">
        <div class="cart-page-inner">
          <div class="table-responsive">
            <table class="table table-bordered">
              <thead class="thead-dark">
                <tr>
                  <th>Product</th>
                  <th>Size</th>
                  <th>Price</th>
                  <th>Quantity</th>
                  <th>Total</th>
                  <th>Remove</th>
                </tr>
              </thead>
              <tbody class="align-middle">
                <% cartProducts.forEach((item) => { %>
                <tr>
                  <td>
                    <div class="img">
                      <a href="/product/<%= item.product._id %>"
                        ><img
                          src="<%= item.product.imagePaths[0] %>"
                          alt="Image"
                      /></a>
                      <p><%= item.product.name %></p>
                    </div>
                  </td>
                  <td>
                    <p><%= item.size.size %></p>
                  </td>
                  <td>
                    <%if(item.product.offerAmount ){%>
                    ₹ <%= item.product.offerAmount %> <span style="text-decoration: line-through; color: red;"><%=item.product.basePrice %></span>
                    <%}else{%>
                      ₹ <%= item.product.basePrice %> 
                      <%}%>
                  </td>
                  <td>
                    <div class="qty">
                      <button
                      class="btn-minus"
                      size-id="<%=item.size._id %>"
                      data-id="<%=item.product._id %>" 
                    >
                      <i class="fa fa-minus"></i>
                    </button>
                      <input type="text" value="<%= item.quantity %>" readonly />
                      <button
                        class="btn-plus"
                        size-id="<%=item.size._id %>"
                        data-id="<%=item.product._id %>"
                        <%= item.quantity %> >
                        <i class="fa fa-plus"></i>
                      </button>
                    </div>
                  </td>
                  <td><%= item.quantity * (item.product.offerAmount ?? item.product.basePrice) %></td>
                  <td>
                    <button
                      class="btn-remove"
                      data-id="<%=item.product._id %>"
                      size-id="<%=item.size._id %>"
                    >
                      <i class="fa fa-trash"></i>
                    </button>
                  </td>
                </tr>
                <% }); %>
              </tbody>
            </table>
          </div>
        </div>
      </div>
      <div class="col-lg-4">
        <div class="cart-page-inner">
          <div class="row">
            <div class="col-md-12">
            </div>
            <div class="col-md-12">
              <div class="cart-summary">
                <div class="cart-content">
                  <h1>Cart Summary</h1>
                  <p>Sub Total<span>₹ <%=userCart.subTotal%></span></p>
                  <p>Shipping Cost<span>Free</span></p>

<%if(userCart.coupon){ %>
  <div class="d-flex justify-content-between">
    <span> coupon  offer <a style="cursor: pointer;" onclick="showCouponInfo('<%= userCart.couponCode %>')"> ⓘ </a></span> 
      <span style="color: green;">-₹<%= userCart.couponDiscount %></span>
  </div>
  <br>
<% } else { %>
<p>Coupon Discount <span><a style="cursor: pointer; color: #4D869C;"  id="openModalBtn">Apply Coupon</a></span></p>
<div id="appliedCouponInfo"></div>
<%}%>
                  <p>
                    Discount<span class="text-success"
                      >₹ <%= userCart.discount %></span
                    >
                  </p>
                  <h2>Grand Total<span>₹ <%= userCart.coupon ? userCart.grandTotal- userCart.couponDiscount :  userCart.grandTotal %></span></h2>
                </div>
                <div class="cart-btn">
                  <!-- <button>Update Cart</button> -->
                  <a href="/checkout" style="text-decoration: none">
                    <button>checkout</button></a
                  >
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
      <%}else{%>
      <div
        style="
          height: 50vh;
          width: 100%;
          display: flex;
          justify-content: center;
          flex-direction: column;
        "
      >
        <div
          id="no-address-alert"
          class="alert alert-warning text-center"
          role="alert"
        >
          Your cart is empt!
        </div>
        <div style="width: 100%; display: flex; justify-content: center">
          <a href="/category" style="text-decoration: none">
            <button type="button" class="btn btn-primary">
              continue shoping
            </button>
          </a>
        </div>
      </div>
      <%}%>
    </div>
  </div>
</div>
<!-- Cart End -->
<!-- model  -->
<div id="couponModal" class="modal">
  <div class="modal-content">
      <span class="close">&times;</span>
      <h2>APPLY COUPON</h2>
      <input type="text" class="coupon-search" placeholder="Enter coupon code" id="couponSearch">
      <div class="coupon-list" id="couponList"></div>
      <div class="savings">Maximum savings: ₹<span id="maxSavings">0</span></div>
      <button class="apply-btn" id="applyBtn">APPLY</button>
  </div>
</div>

<div id="couponInfoModal" class="modal">
  <div class="modal-content">
      <span class="closeInfo" id="closeInfo">&times;</span>
      <h2>Coupon Information</h2>
      <p id="couponInfoContent"></p>
      <button id="removeCouponBtn">Remove Coupon</button>
  </div>
</div>


<%- include('../userPartials/footer'); %>
<!-- <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/toastr.min.css">
<script src="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/toastr.min.js"></script> -->
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

<!-- coupon  -->
<script>
  const coupons = JSON.parse('<%- JSON.stringify(coupons) %>'.replace(/&#34;/g, '"'));
  const grandTotal = parseFloat('<%- userCart?.grandTotal %>');

  const modal = document.getElementById('couponModal');
  const couponInfoModal = document.getElementById('couponInfoModal');
  const openBtn = document.getElementById('openModalBtn');
  const closeBtns = document.getElementsByClassName('close');
  const closeInfoBtn = document.getElementById('closeInfo');
  const couponSearch = document.getElementById('couponSearch');
  const couponList = document.getElementById('couponList');
  const maxSavings = document.getElementById('maxSavings');
  const applyBtn = document.getElementById('applyBtn');
  const removeCouponBtn = document.getElementById('removeCouponBtn');


  for (let closeBtn of closeBtns) {
      closeBtn.onclick = function(event) {
          event.stopPropagation();
          this.parentElement.parentElement.style.display = 'none';
      }
  }
  
  closeInfoBtn.addEventListener("click", function(e){
    e.stopPropagation();
    couponInfoModal.style.display = 'none';
  })

  window.onclick = (event) => {
      if (event.target == modal) modal.style.display = 'none';
      if (event.target == couponInfoModal) couponInfoModal.style.display = 'none';
  };



  function renderCoupons(couponsToRender) {
      couponList.innerHTML = '';
      couponsToRender.forEach(coupon => {
          const formattedDate = new Date(coupon.expiryDate).toLocaleDateString('en-IN', {
              year: 'numeric',
              month: 'long',
              day: 'numeric'
          });
          const couponItem = document.createElement('div');
          couponItem.className = 'coupon-item';
          couponItem.innerHTML = `
              <input type="radio" name="coupon" id="${coupon.name}" value="${coupon.couponCode}">
              <label for="${coupon.name}">
                  <span class="coupon-code">${coupon.couponCode}</span>
                  <div>
                      <div>Save ₹${coupon.offerAmount}</div>
                      <div>Rs. ${coupon.offerAmount} off on minimum purchase of Rs. ${coupon.minimumPurchaseAmount}</div>
                      <div>Expires on: ${formattedDate}</div>
                  </div>
              </label>
          `;
          couponList.appendChild(couponItem);

          // Add click event listener to show coupon info
          couponItem.querySelector('label').addEventListener('click', (e) => {
              e.stopPropagation();
              showCouponInfo(coupon.couponCode);
          });
      });
  }

  function updateMaxSavings() {
      const selectedCoupon = document.querySelector('#couponList input[type="radio"]:checked');
      const savings = selectedCoupon ? coupons.find(c => c.couponCode === selectedCoupon.value).offerAmount : 0;
      maxSavings.textContent = savings;
  }

  couponSearch.addEventListener('input', (e) => {
      const searchTerm = e.target.value.toLowerCase();
      const filteredCoupons = coupons.filter(coupon => 
          coupon.name.toLowerCase().includes(searchTerm)
      );
      renderCoupons(filteredCoupons);
  });

  couponList.addEventListener('change', updateMaxSavings);

  applyBtn.addEventListener("click", async function() {
      const selectedCoupon = document.querySelector('#couponList input[type="radio"]:checked');
      if (selectedCoupon) {
          const couponCode = selectedCoupon.value;
          try {
              const response = await fetch('/apply-coupon', {
                  method: 'POST',
                  headers: {
                      'Content-Type': 'application/json',
                  },
                  body: JSON.stringify({ code: couponCode, grandTotal }),
              });
              const result = await response.json();
              if (response.ok) {
                  window.location.reload();
              } else {
                  showInfoToast(result.error);
              }
          } catch (error) {
              console.error('Error:', error);
              showInfoToast('An error occurred while applying the coupon.');
          }
      } else {
          showInfoToast('Please select a coupon to apply.');
      }
  });

  function showCouponInfo(couponCode) {
      const coupon = coupons.find(c => c.couponCode === couponCode);
      if (coupon) {
      const formattedDate = new Date(coupon.expiryDate).toLocaleDateString(
        "en-IN",
        {
          year: "numeric",
          month: "long",
          day: "numeric",
        }
      );

      document.getElementById("couponInfoContent").innerHTML = `
              Save ₹${coupon.offerAmount}<br>
              Rs. ${coupon.offerAmount} off on minimum purchase of Rs. ${coupon.minimumPurchaseAmount}.<br>
              Expires on: ${formattedDate}
          `;
          couponInfoModal.style.display = 'block';
      }
  }

  removeCouponBtn.addEventListener('click', async function(){
      try {
          const response = await fetch('/remove-coupon', {
              method: 'DELETE',
              headers: {
                  'Content-Type': 'application/json',
              },
          });
          const result = await response.json();
          if (result.success) {
             window.location.reload();
          } else {
              showErrorToast(result.error);
          }
      } catch (error) {
          console.error('Error remove:', error);
          showErrorToast('An error occurred while removing the coupon.');
      }
      couponInfoModal.style.display = 'none';
  });
  openBtn.onclick = () => modal.style.display = 'block';


  renderCoupons(coupons);
</script>


<script>
  document.addEventListener("DOMContentLoaded", () => {


    // Increment quantity
    document.querySelectorAll(".btn-plus").forEach((button) => {
      button.addEventListener("click", async function (e) {
        const productId = this.getAttribute("data-id");
        const size = this.getAttribute("size-id");
        const quantityInput = this.previousElementSibling;
        let quantity = parseInt(quantityInput.value);

        if (quantity >= 11) {
          showInfoToast("You can only add 10 items");
          quantityInput.value = 10;
          // this.disabled = true;
          return;
        }
        
        quantityInput.value = quantity + 1;

        const response = await fetch("update-cart-quantity", {
          method: "PUT",
          headers: {
            "Content-Type": "application/json",
          },
          body: JSON.stringify({
            productId,
            action: "increment",
            size,
          }),
        });

        if (!response.ok) {
          // Revert the quantity change in case of an error
          quantityInput.value = quantity;
        } else {
          window.location.reload();
        }
      });
    });

    // Decrement quantity
    document.querySelectorAll(".btn-minus").forEach((button) => {
      button.addEventListener("click", async function (e) {
        const productId = this.getAttribute("data-id");
        const size = this.getAttribute("size-id");
        const quantityInput = this.nextElementSibling;
        let quantity = parseInt(quantityInput.value);

        if (quantity == 0) {
          showInfoToast("One item needed");
          quantityInput.value = 1;
          // this.disabled = true;
          return;
        }
        
        quantityInput.value = quantity - 1;

        const response = await fetch("update-cart-quantity", {
          method: "PUT",
          headers: {
            "Content-Type": "application/json",
          },
          body: JSON.stringify({
            productId,
            action: "decrement",
            size,
          }),
        });

        if (!response.ok) {
          // Revert the quantity change in case of an error
          quantityInput.value = quantity;
        } else {
          window.location.reload();
        }
      });
    });
  });
</script>


<!-- remove items from cart  -->
<script>
  document.addEventListener("DOMContentLoaded", () => {
    document.querySelectorAll(".btn-remove").forEach((button) => {
      button.addEventListener("click", async function (e) {
        Swal.fire({
          title: "Are you sure?",
          text: "Do you want to detete this item?",
          icon: "warning",
          showCancelButton: true,
          confirmButtonColor: "#3085d6",
          cancelButtonColor: "#d33",
          confirmButtonText: "Yes, delete it!",
        }).then(async (result) => {
          if (result.isConfirmed) {
            const productId = this.getAttribute("data-id");
            const sizeId = this.getAttribute("size-id");

            console.log(productId, sizeId);
            const response = await fetch("/delete-cart-item", {
              method: "DELETE",
              headers: {
                "Content-Type": "application/json",
              },
              body: JSON.stringify({
                productId,
                sizeId,
              }),
            });
            console.log(response);
            if (response.ok) { 
            Swal.fire({
              icon: "success",
              title: "item successfully deleted",
              showConfirmButton: false,
              timer: 1500,
            }).then(() => {
              window.location.reload();
            });
           }else{
            Swal.fire({
          icon: "error",
          title: "somthing went wrong",
          // text: error.message,
          showConfirmButton: true,
        });
           }
          }
        });
      });
    });
  });
</script>

