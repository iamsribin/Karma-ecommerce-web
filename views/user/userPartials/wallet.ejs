<div class="container mt-5">
    <div class="card">
        <div class="card-header d-flex justify-content-between align-items-center">
            <h2 class="mb-0">My Wallet</h2>
            <button class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#addMoneyModal">Add Money</button>
        </div>
        <div class="card-body">
            <div class="bg-light p-3 mb-3">
                <h5 class="mb-0">
                    <span class="wallet-icon">ðŸ‘›</span>
                    Balance:â‚¹<%= wallet.balance %> 
                </h5>
            </div>
            <h5>History</h5>
            <p class="text-muted">No history found</p>
            <table class="table">
                <thead>
                    <tr>
                        <th>Date</th>
                        <th>Amount</th>
                        <th>Type</th>
                        <th>Info</th>
                    </tr>
                </thead>
                <tbody id="transactionTable">
                  <% wallet.transactions.forEach((transaction)=>{ %>
                    <td><%= transaction.createdAt %></td>
                    <td class="credit"><%= transaction.amount.toFixed(2) %></td>
                    <td class="credit"><%= transaction.type %></td>
                    <td><%= transaction.description %></td>
                <% }) %>
                </tbody>
            </table>
        </div>
    </div>
</div>

<!-- Add Money Modal -->
<div class="modal fade" id="addMoneyModal" tabindex="-1" aria-labelledby="addMoneyModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="addMoneyModalLabel">Add Money to Wallet</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form id="addMoneyForm">
                    <div class="mb-3">
                        <label for="amount" class="form-label">Amount (â‚¹)</label>
                        <input type="number" class="form-control" id="amount" required min="1">
                        <div class="invalid-feedback">
                            Please enter a valid amount (greater than 0).
                        </div>
                    </div>
                    <button type="submit" class="btn btn-primary">Add Money</button>
                </form>
            </div>
        </div>
    </div>
</div>

<script>
    document.getElementById('addMoneyForm').addEventListener('submit', function(e) {
        e.preventDefault();
        const amountInput = document.getElementById('amount');
        const amount = parseFloat(amountInput.value);

        if (isNaN(amount) || amount <= 0) {
            amountInput.classList.add('is-invalid');
            return;
        }

        amountInput.classList.remove('is-invalid');

        // Add transaction to the table
        const transactionTable = document.getElementById('transactionTable');
        const newRow = transactionTable.insertRow(0);
        newRow.innerHTML = `
            <td>${new Date().toLocaleDateString()}</td>
            <td class="credit">â‚¹${amount.toFixed(2)}</td>
            <td class="credit">Credit</td>
            <td>Added money</td>
        `;

        // Update balance
        const balanceElement = document.querySelector('.card-body h5');
        const currentBalance = parseFloat(balanceElement.textContent.split('â‚¹')[1]);
        const newBalance = currentBalance + amount;
        balanceElement.textContent = `ðŸ‘› Balance: â‚¹${newBalance.toFixed(2)}`;

        // Clear input and close modal
        amountInput.value = '';
        bootstrap.Modal.getInstance(document.getElementById('addMoneyModal')).hide();

        // Remove "No history found" message if it exists
        const noHistoryMessage = document.querySelector('.text-muted');
        if (noHistoryMessage) {
            noHistoryMessage.remove();
        }
    });
</script>